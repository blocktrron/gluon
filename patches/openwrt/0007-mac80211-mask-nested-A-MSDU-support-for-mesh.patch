From: David Bauer <mail@david-bauer.net>
Date: Fri, 8 Oct 2021 00:30:23 +0200
Subject: mac80211: mask nested A-MSDU support for mesh

mac80211 incorrectly processes A-MSDUs contained in A-MPDU frames. This
results in dropped packets and severely impacted throughput.

As a workaround, don't indicate support for A-MSDUs contained in
A-MPDUs. This improves throughput over mesh links by factor 10.

Ref: https://github.com/openwrt/mt76/issues/450

Signed-off-by: David Bauer <mail@david-bauer.net>

diff --git a/package/kernel/mac80211/patches/subsys/600-mac80211-mask-nested-A-MSDU-support-for-mesh.patch b/package/kernel/mac80211/patches/subsys/600-mac80211-mask-nested-A-MSDU-support-for-mesh.patch
new file mode 100644
index 0000000000000000000000000000000000000000..4f242b9c479c210f11e49f986e0df6162fd193e3
--- /dev/null
+++ b/package/kernel/mac80211/patches/subsys/600-mac80211-mask-nested-A-MSDU-support-for-mesh.patch
@@ -0,0 +1,36 @@
+From 313d8c18385f10957402b475f9b0c209ceab6c5a Mon Sep 17 00:00:00 2001
+From: David Bauer <mail@david-bauer.net>
+Date: Fri, 8 Oct 2021 00:25:19 +0200
+Subject: [PATCH] mac80211: mask nested A-MSDU support for mesh
+
+mac80211 incorrectly processes A-MSDUs contained in A-MPDU frames. This
+results in dropped packets and severely impacted throughput.
+
+As a workaround, don't indicate support for A-MSDUs contained in
+A-MPDUs. This improves throughput over mesh links by factor 10.
+
+Ref: https://github.com/openwrt/mt76/issues/450
+
+Signed-off-by: David Bauer <mail@david-bauer.net>
+---
+ net/mac80211/agg-rx.c | 4 +++-
+ 1 file changed, 3 insertions(+), 1 deletion(-)
+
+diff --git a/net/mac80211/agg-rx.c b/net/mac80211/agg-rx.c
+index cd4cf84a7f99..e26af1a8e6ab 100644
+--- a/net/mac80211/agg-rx.c
++++ b/net/mac80211/agg-rx.c
+@@ -250,7 +250,9 @@ static void ieee80211_send_addba_resp(struct sta_info *sta, u8 *da, u16 tid,
+ 	mgmt->u.action.u.addba_resp.action_code = WLAN_ACTION_ADDBA_RESP;
+ 	mgmt->u.action.u.addba_resp.dialog_token = dialog_token;
+ 
+-	capab = (u16)(amsdu << 0);	/* bit 0 A-MSDU support */
++	capab = 0;
++	if (!sta->mesh)
++		capab = (u16)(amsdu << 0);	/* bit 0 A-MSDU support */
+ 	capab |= (u16)(policy << 1);	/* bit 1 aggregation policy */
+ 	capab |= (u16)(tid << 2); 	/* bit 5:2 TID number */
+ 	capab |= (u16)(buf_size << 6);	/* bit 15:6 max size of aggregation */
+-- 
+2.33.0
+
